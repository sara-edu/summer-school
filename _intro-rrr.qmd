---
format: revealjs
embed-resources: true
execute: 
  echo: true
---

## Reproducible research

> "The goal of reproducible research is to tie specific instructions to data analysis and experimental data so that scholarship can be recreated, understood, and verified." 

::: aside

Source: John Blischak, Alison Hill, Ben Marwick, Daniel Sjoberg, Will Landau (2024). CRAN Task View: Reproducible Research. Version 2024-06-14. URL [https://CRAN.R-project.org/view=ReproducibleResearch.
](https://cran.r-project.org/web/views/ReproducibleResearch.html)

:::

## Reproducible research

> "Research is reproducible when others can reproduce the results of a scientific study given only the original data, code, and documentation"

::: aside

Source: Alston, J. M., & Rick, J. A. (2021). A Beginner's Guide to Conducting Reproducible Research. The Bulletin of the Ecological Society of America, 102(2), e01801. [https://doi.org/10.1002/bes2.1801](https://esajournals.onlinelibrary.wiley.com/doi/full/10.1002/bes2.1801)

:::

## Reproducible research

![](images/sci1.png){width="30%"}
![](images/sci2.png)
![](images/sci3.png){width="50%"}

## Reproducible research needs:

1. Data

1. Code

1. Documentation

## Reproducible research needs:

@. **Data**: people can access your original data.

. . .

@. **Code**: others can read, learn & replicate results.

. . .

@. **Documentation**: complete information about how to conduct the study.

## Manual updates

![](images/manual-update.svg){width=80%}

::: aside
Source: [Jadey Ryan](https://jadeyryan.quarto.pub/slc-rug-quarto/#/manual-updates)
:::

## Updates with Quarto

<br>

![](images/updates-with-quarto.svg){.r-stretch}

::: aside
Source: [Jadey Ryan](https://jadeyryan.quarto.pub/slc-rug-quarto/#/updates-with-quarto)
:::

## {background-image="images/demo.gif" background-size="50%" background-position="right" background-color=black}

:::: {.columns}

::: {.column width="45%"}
<br>
[Demo<br>Reproducible<br>Research]{.r-fit-text}

[{{< fa download >}} demo_repro_research.qmd](demo_repro_research.qmd){.r-fit-text}

::: aside
GIF Source {{< fa brands instagram >}} [@dolly_ki_tapri_nagpur](https://www.instagram.com/dolly_ki_tapri_nagpur)
:::

:::

::::

## Open-access

> "Open-source software (OSS) is computer software that is released under a license in which the copyright holder grants users the rights to use, study, change, and distribute the software and its source code to anyone and for any purpose." 

::: aside

Source: [Wikipedia](https://en.wikipedia.org/wiki/Open-source_software)

:::

## Popular open-access software

![](images/popular_open_source.png){width=85%}

::: aside

Source: Google search

:::

## R programming language

<br>
<br>

:::: {.columns}
::: {.column width="25%"}

![](images/exploder.gif)

:::

::: {.column width="75%"}

<br>

> ‚ÄúR is a free software environment for statistical computing and graphics.‚Äù

:::
::::

::: aside
Source: 
:::

## History of R

- Initially developed as S language by Bells Labs.

- First appeared in August 1993 as R language by:

:::: columns
::: {.column width="50%"}
`Ross Ihaka`<br>(New Zealand Statistician)

![](https://cdn.auckland.ac.nz/aem/content/auckland/en/science/about-the-faculty/department-of-statistics/ihaka-lecture-series/_jcr_content/leftpar/imagecomponent/image.img.480.low.jpg/1561079330278.jpg)
:::

::: {.column width="50%"}
`Robert Gentleman`<br>(Canadian Statistician)

![](https://www.computerhope.com/people/pictures/robert_gentleman.jpg){width="350"}
:::
::::

## Why R?

::: {.r-stack}

![](images/reco2.png){.fragment}

![](images/reco7.png)

![](images/reco3.png){.fragment}

![](images/reco5.png){.fragment}

![](images/reco6.png){.fragment}

![](images/reco4.png){.fragment}

![](images/reco1.png){.fragment}

:::

## Download R from CRAN 

<https://www.r-project.org/>

![](images/cran.png)

## R console

::: columns
::: {.column width="50%"}
<br>

-   R version 4.4.0 (2024-04-25)

-   R name "Puppy Cup"

-   R licence "ABSOLUTELY NO WARRANTY"

-   R prompt `>`
:::

::: {.column width="50%"}

![](images/console-r.png)
:::
:::

## Workspace image

:::: columns
::: {.column width="50%"}

<br>

- Don't save workspace image.

-   It helps in "freshly minted R sessions".

-   "put more trust in your script than in your memory".
:::

::: {.column width="50%"}
![](images/workspace-img.png)
:::
::::

::: aside
[[Source: R Bloggers](https://www.r-bloggers.com/2017/04/using-r-dont-save-your-workspace/)]{.small}
:::

## {background-image=images/code_hero.gif background-size="30%" background-color=black}

::: aside
Artwork by [Alision Horst](https://allisonhorst.com/)
:::


## R console

<br>

::: columns
::: {.column width="50%"}
### [Code]{.center}

```{r}
#| label: number
#| eval: false
7
```
:::

::: {.column width="50%"}
### [Output]{.center}

```{r}
#| label: number
#| echo: false
#| output: asis
```
:::
:::

## R console: Addition 

<br>

::: columns
::: {.column width="50%"}
### [Code]{.center}

```{r}
#| label: add
#| eval: false
2 + 1
```
:::

::: {.column width="50%"}
### [Output]{.center}

```{r}
#| label: add
#| echo: false
#| output: asis
```
:::
:::



## Operators

`12 + 3` in this code `+` is an operator.

<br>

. . . 

> "Operators are used to perform operations on variables and values."

<br>

. . . 

::: {.callout-tip}
Put spaces between and around operators (`= + - * /`)
:::

::: aside
[Source: [w3schools](https://www.w3schools.com/r/r_operators.asp)]{.small}
:::


## Arithmetic operators

> "Arithmetic operators are used with numeric values to perform common mathematical operations."

| Operator | Name           | Example |
|----------|----------------|---------|
| `+`      | Addition       | x + y   |
| `-`      | Subtraction    | x - y   |
| `*`      | Multiplication | x \* y  |
| `/`      | Division       | x / y   |
| `^`      | Exponent       | x \^ y  |

::: aside
[Source: [w3schools](https://www.w3schools.com/r/r_operators.asp)]{.small}
:::


## R console: Subtraction 

<br>

::: columns

::: {.column width="50%"}
### [Code]{.center}

```{r}
#| label: subtract
#| eval: false
10 - 2
```
:::

::: {.column width="50%"}
### [Output]{.center}

```{r}
#| label: subtract
#| echo: false
#| output: asis
```
:::

:::

## R console: Multiplication

<br>

::: columns
::: {.column width="50%"}
### [Code]{.center}

```{r}
#| label: multiply
#| eval: false
12 * 4
```
:::

::: {.column width="50%"}
### [Output]{.center}

```{r}
#| label: multiply
#| echo: false
#| output: asis
```
:::
:::

## R console: Division 

<br>

::: columns
::: {.column width="50%"}
### [Code]{.center}

```{r}
#| label: division
#| eval: false
25 / 5
```
:::

::: {.column width="50%"}
### [Output]{.center}

```{r}
#| label: division
#| echo: false
#| output: asis
```
:::
:::

## R console 

<br>

::: columns
::: {.column width="75%"}
### [Code]{.center}

```{r}
#| label: calci5
#| eval: false
3434 + 343453 * 2323 / 534 - 1000
```
:::

::: {.column width="25%"}
### [Output]{.center}

```{r}
#| label: calci5
#| echo: false
#| output: asis
```
:::

<br> 
<br>

::: callout-important
R follows the BODMAS (bracket, order, division, multiplication, addition and subtraction) rule to solve mathematical equations.
:::
:::

## R comparison operators

> "Comparison operators are used to compare two values."

| Operator | Name                     | Example |
|----------|--------------------------|---------|
| `==`     | Equal                    | x == y  |
| `!=`     | Not equal                | x != y  |
| `>`      | Greater than             | x > y   |
| `<`      | Less than                | x < y   |
| `>=`     | Greater than or equal to | x >= y  |
| `<=`     | Less than or equal to    | x <= y  |

<!-- ::: aside -->
<!-- [Source: [w3schools](https://www.w3schools.com/r/r_operators.asp)]{.small} -->
<!-- ::: -->

## R console

<br>

::: columns
::: {.column width="50%"}
### [Code]{.center}

```{r}
#| label: logic1
#| eval: false
4 == 5
```
:::

::: {.column width="50%"}
### [Output]{.center}

```{r}
#| label: logic1
#| echo: false
#| output: asis
```
:::
:::

## R console

<br>

::: columns
::: {.column width="50%"}
### [Code]{.center}

```{r}
#| label: logic2
#| eval: false
67 > 60
```
:::

::: {.column width="50%"}
### [Output]{.center}

```{r}
#| label: logic2
#| echo: false
#| output: asis
```
:::
:::

## R miscellaneous operator 

> "Miscellaneous operators are used to manipulate data."

<br>

::: columns
::: {.column width="50%"}
### [Code]{.center}

```{r}
#| label: misc1
#| eval: false
12:36
```
:::

::: {.column width="50%"}
### [Output]{.center}

```{r}
#| label: misc1
#| echo: false
#| output: asis
```
:::
:::

::: aside
[Source: [w3schools](https://www.w3schools.com/r/r_operators.asp)]{.small}
:::

## Plot using R

::: panel-tabset
### Code

```{r}
#| label: plot1
#| eval: false
plot(1:100)
```

### Output

```{r}
#| label: plot1
#| echo: false
#| output: asis
```
:::

## üòè That's okay but how to

::: nonincremental
-   combine plot, text, tables and images in a single file.

-   publish my work online or convert into a word, pdf or html file.

-   work efficiently with my different projects and save, share and track them.
:::

## {background-color=#000000 transition="zoom" transition-speed="slow" .center}

[üî• WE NEED A SUPERHERO üî•]{.r-fit-text}

![](https://media3.giphy.com/media/o6FWop1Gbuyly/giphy.gif?cid=ecf05e474i92dhzes35zr0jtervmdixne1moeehvvtnntmm8&ep=v1_gifs_related&rid=giphy.gif&ct=g){fig-align="center"}

## 

![](images/logo_rstd.png){width=30%}

- RStudio is an integrated development environment (IDE) for R and Python. 

- It includes a console, syntax-highlighting editor that supports direct code execution, and tools for plotting, history, debugging, and workspace management.

- Download RStudio.

::: aside
Source: <https://posit.co/products/open-source/rstudio/>
:::

## RStudio IDE 

![](images/rstd_ide.png){fig-align="center"}

## [RStudio $\rightarrow$ Tools $\rightarrow$ Global Options]{.r-fit-text .center}

![](images/rstd_options1.png){fig-align="center"}

## [RStudio $\rightarrow$ Tools $\rightarrow$ Global Options]{.r-fit-text .center}

![](images/rstd_options2.png){fig-align="center"}

## R & RStudio {.center .theme-cursive}

<br>

::: columns
::: {.column width="50%"}
### Imagine R as a powerful engine

<br>

[{{< fa gear size=7x >}}]{.theme-red}
:::

::: {.column width="50%"}
### and RStudio as a stylish car

<br>

[{{< fa car size=7x >}}]{.theme-blue}
:::
:::

## {background-color=black}

![](images/project-logo.png){fig-align=center width=25%}

[RStudio Project]{.r-fit-text}

## Open RStudio

![](images/rstd-proj.png){fig-align=center}

## RStudio without project

![](images/rstd-proj-none.png){fig-align=center}

## RStudio without project 

![](images/rstd-proj-folders.png){fig-align=center}

## RStudio roject helps: {background-image="images/r-projects.jpg" background-size="55%" background-position="bottom right"}

::: columns
::: {.column width="100%"}
-   "to divide your work into multiple contexts, each with their own"
    -   working directory,
    -   workspace,
    -   history, and
    -   source documents."
:::
:::

::: aside
[Source: [RStudio](https://support.rstudio.com/hc/en-us/articles/200526207-Using-Projects) & artwork by [Allison Horst](https://www.allisonhorst.com/)]{.small}
:::

## Let's do it together {background-image=images/dito.gif background-size="contain" background-position="right" background-color=black}

:::: {.columns}

::: {.column width="40%"}
[Create <br> RStudio <br> project]{.r-fit-text}
:::

::::

::: aside
GIF Source {{< fa brands instagram >}} [@dolly_ki_tapri_nagpur](https://www.instagram.com/dolly_ki_tapri_nagpur)
:::

## Create RStudio project 

![](images/rstd_proj1.png){fig-align=center}

## Create RStudio project 

![](images/rstd_proj2.png){fig-align=center}

## [In case anything goes wrong$...$]{.theme-red}

![](images/rstd_proj3.1.png){fig-align=center}

## Create RStudio project {.center}

![](images/rstd_proj3.png){fig-align=center}

## Create RStudio project {.center}

![](images/rstd_proj4.png){fig-align=center}

## Create RStudio project {.center}

![](images/rstd_proj4a.png){fig-align=center}

## Create RStudio project {.center}

![](images/rstd_proj4b.png){fig-align=center}

## Create RStudio project {.center}

![](images/rstd_proj4c.png){fig-align=center}

## RStudio project "name" {.center}

![](images/rstd_proj_name.png){fig-align=center}

## RStudio project "path" {.center}

![](images/rstd_proj_path1.png){fig-align=center}

## RStudio project {.center}

![](images/rstd_proj_path2.png){fig-align=center}

## Write codes in R console

![](images/code-console.png){fig-align=center}

## Write codes in R script

![](images/code-script.png){fig-align=center}

## R script `.R`

> Write codes in the R script $\rightarrow$ Console will show the results.

-   Benefits of writing codes in R script:
    -   You can save it for later use and revision.
    -   You can share with others.
    -   A better track of codes.

## üí° Tips for R script:

1.  Writing readable code because other people might need to use your code.

1.  Writing readable code because you might need to use your code, a few weeks/months/years after you've written it.

1.  Put spaces between and around variable names and operators (`=+-*/`).

1.  Break up long lines of code.

1.  Keeping a consistent style.

::: aside
[Source: [Marius Mather](https://bookdown.org/marius_mather/Rad/tips-for-effective-r-programming.html) also [Toma≈æ Ka≈°trun](https://tomaztsql.wordpress.com/2023/01/31/tips-for-organising-your-r-code/)]{.small}
:::

##  {background-color=black}

![](images/logo_quarto.png){fig-align=center}

[Quarto]{.r-fit-text}

## [Quarto is the next generation of R Markdown]{.r-fit-text}

<br>

::: columns
::: {.column width="40%"}
![](images/logo_rmd.png)
:::

::: {.column width="20%"}
<br> <br> [{{< fa arrow-right-long >}}]{.r-fit-text .navy-blue}
:::

::: {.column width="40%"}
![](images/quarto-logo-hex.png){width="400"}
:::
:::

::: aside
[Read more here [From R Markdown to Quarto](https://rstudio-conf-2022.github.io/rmd-to-quarto/)]{.small}
:::

## Quarto

> "An open-source scientific and technical publishing system"

. . .

Quarto can produce a wide variety of output formats:

::: {.nonincremental .theme-red}
{{< fa square-check >}} Articles & Reports

{{< fa square-check >}} Presentations

{{< fa square-check >}} Interactive Docs

{{< fa square-check >}} Websites

{{< fa square-check >}} Books
:::

::: aside
[Source: [Quarto website](https://quarto.org/)]{.small}
:::

##  [Analyze. Share. Reproduce. You have a story to tell with data --- tell it with Quarto.]{.r-fit-text}

<br>

![](images/quarto_workflow.png){fig-align=center}

##  {background-image="images/dynamic-content1.png" background-size="contain" background-position="center" background-transition="fade"}

##  {background-image="images/dynamic-content2.png" background-size="contain" background-position="center" background-transition="fade"}

##  {background-image="images/dynamic-content3.png" background-size="contain" background-position="center" background-transition="fade"}

##  {background-image="images/yaml_quarto.png" background-size="cover" background-position="center"}

##  {background-image="images/text_quarto.png" background-size="cover" background-position="center"}

##  {background-image="images/code_quarto.png" background-size="cover" background-position="center"}

##  {background-image="images/render_quarto.png" background-size="cover" background-position="center"}

## [Download](https://github.com/quarto-dev/quarto-cli/releases/download/v1.3.450/quarto-1.3.450-macos.pkg) Quarto

![](images/start_quarto1.png)

## Get started: Choose IDE 

![](images/start_quarto2.png)

## Let's do it together {background-image=images/dito.gif background-size="contain" background-position="right" background-color=black}

:::: {.columns}

::: {.column width="40%"}
[Create <br> Quarto <br> File]{.r-fit-text}
:::

::::

::: aside
GIF Source {{< fa brands instagram >}} [@dolly_ki_tapri_nagpur](https://www.instagram.com/dolly_ki_tapri_nagpur)
:::

## Create a new Quarto document 

![](images/quarto_new_file2.png){fig-align=center}

## [File $\rightarrow$ New file $\rightarrow$ Quarto document]{.r-fit-text} 

![](images/quarto_new_file1.png){fig-align=center}

## New Quarto document 

![](images/new_quarto1.png){fig-align=center}

## New Quarto document 

![](images/new_quarto2.png){fig-align=center}

## New Quarto document 

![](images/new_quarto3.png){fig-align=center}

## New Quarto document 

![](images/new_quarto4.png){fig-align=center}

## New Quarto document 

![](images/new_quarto5.png){fig-align=center}

## New Quarto document 

![](images/new_quarto6.png){fig-align=center}

## New Quarto document 

![](images/new_quarto7.png){fig-align=center}

## New Quarto document {.center}

![](images/new_quarto8.png){fig-align=center}

## Save Quarto document 

![](images/quarto_file_name.png){fig-align=center}

## Save Quarto document {.center}

![](images/quarto_file_folder.png){fig-align=center}


## {background-image="images/render.png" background-size="contain"}

## Process When You Render the Quarto Document

> Quarto sends the `.qmd` file to **knitr**, which executes all of the code chunks and creates a new markdown (`.md`) document which includes the code and its output. The markdown file generated by knitr is then processed by **pandoc**, which is responsible for creating the finished file.

## [Process When You Render Quarto]{.center}

<br>

![](images/horst-qmd-render-schema.png){.r-stretch}

::: aside
Source: Artwork from ‚ÄúHello, Quarto‚Äù keynote by Julia Lowndes and Mine √áetinkaya-Rundel, presented at RStudio::Conf(2022). Illustrated by Allison Horst.
:::

## [Source editor & Visual editor]{.r-fit-text} {background-color=black}

<br>

![](images/spider.gif){fig-align=center}

## Visual editor {.center}

![](images/visual_mode1.png)

## Visual editor {.center}

![](images/visual_mode2.png){fig-align="center"}

## Visual editor {.center}

![](images/visual_mode3.png){fig-align="center"}

## Source editor {.center}

![](images/source_mode2.png){fig-align="center"}

##  {background-image="images/source_visual_quarto.png" background-size="contain" background-position="center middle"}

## {background-color=black}

![](https://logowik.com/content/uploads/images/markdown1678.logowik.com.webp){fig-align=center}

[Markdown]{.r-fit-text}

## Text formatting

<br>

+-----------------------------------+-----------------------------------+
| Markdown Syntax                   | Output                            |
+===================================+===================================+
| ``` markdown                      | normal                            |
| normal                            |                                   |
| ```                               |                                   |
+===================================+===================================+
| ``` markdown                      | *italics*                         |
| *italics*                         |                                   |
| ```                               |                                   |
+-----------------------------------+-----------------------------------+
| ``` markdown                      | **bold**                          |
| **bold**                          |                                   |
| ```                               |                                   |
+-----------------------------------+-----------------------------------+
| ``` markdown                      | ***bold italics***                |
| ***bold italics***                |                                   |
| ```                               |                                   |
+-----------------------------------+-----------------------------------+

::: aside
[Source: [Quarto guide](https://quarto.org/docs/authoring/markdown-basics.html)]{.small}
:::

## Text formatting

<br>

+-----------------------------------+-----------------------------------+
| Markdown Syntax                   | Output                            |
+===================================+===================================+
| ``` markdown                      | superscript^2^                    |
| superscript^2^                    |                                   |
| ```                               |                                   |
+===================================+===================================+
| ``` markdown                      | subscript~2~                      |
| subscript~2~                      |                                   |
| ```                               |                                   |
+-----------------------------------+-----------------------------------+
| ``` markdown                      | ~~strike through~~                |
| ~~strike through~~                |                                   |
| ```                               |                                   |
+-----------------------------------+-----------------------------------+
| ``` markdown                      | `verbatim code`                   |
| `verbatim code`                   |                                   |
| ```                               |                                   |
+-----------------------------------+-----------------------------------+

::: aside
[Source: [Quarto guide](https://quarto.org/docs/authoring/markdown-basics.html)]{.small}
:::

## Headings {.scrollable}

<br>

+-----------------+-----------------------------------+
| Markdown Syntax | Output                            |
+=================+===================================+
| ``` markdown    | # Header 1 {.heading-output}      |
| # Header 1      |                                   |
| ```             |                                   |
+-----------------+-----------------------------------+
| ``` markdown    | ## Header 2 {.heading-output}     |
| ## Header 2     |                                   |
| ```             |                                   |
+-----------------+-----------------------------------+
| ``` markdown    | ### Header 3 {.heading-output}    |
| ### Header 3    |                                   |
| ```             |                                   |
+-----------------+-----------------------------------+
| ``` markdown    | #### Header 4 {.heading-output}   |
| #### Header 4   |                                   |
| ```             |                                   |
+-----------------+-----------------------------------+
| ``` markdown    | ##### Header 5 {.heading-output}  |
| ##### Header 5  |                                   |
| ```             |                                   |
+-----------------+-----------------------------------+
| ``` markdown    | ###### Header 6 {.heading-output} |
| ###### Header 6 |                                   |
| ```             |                                   |
+-----------------+-----------------------------------+

## Insert links {.scrollable}

<br>

+--------------------------------------+--------------------------------------+
| Markdown syntax                      | Output                               |
+======================================+======================================+
| ``` markdown                         | <https://saraedu.netlify.app/>       |
| <https://saraedu.netlify.app/>       |                                      |
| ```                                  |                                      |
+--------------------------------------+--------------------------------------+

## Insert links {.scrollable}

<br>

+----------------------------------------+--------------------------------------+
| Markdown syntax                        | Output                               |
+========================================+======================================+
| ``` markdown                           | [SARA](https://saraedu.netlify.app/) |
| [SARA](https://saraedu.netlify.app/)   |                                      |
| ```                                    |                                      |
+----------------------------------------+--------------------------------------+

## Add images {.scrollable}

> If image is saved in your computer, <br>`![](add image path here)`

. . .

<br>

+-------------------------+-----------------------+
| Markdown Syntax         | Output                |
+=========================+=======================+
| ``` markdown            | ![](rose.jpg)         |
| ![](rose.jpg)           |                       |
| ```                     |                       |
+-------------------------+-----------------------+

## Add images {.scrollable}

> If image is taken from the internet, <br>`![](add image link here)`

. . .

<br>

:::: {.columns}

::: {.column width="70%"}

``` markdown                                                 
![](https://images.unsplash.com/photo-1627130595904-ebeeb6540a93?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)
```

:::

::: {.column width="30%"}
![](https://images.unsplash.com/photo-1627130595904-ebeeb6540a93?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D){width=70%}
:::

::::

## Unordered list {.scrollable} 

<br>

::: nonincremental

+-------------------------+---------------------------------+
| Markdown Syntax         | Output                          |
+=========================+=================================+
| ``` markdown            |                                 |
| * Item 1                | * Item 1                        |
| * Item 2                | * Item 2                        |
| * Item 3                | * Item 3                        |
| ```                     |                                 |
+-------------------------+---------------------------------+

:::

## Unordered list: Sub-items {.scrollable} 

<br>

::: nonincremental

+-----------------------------------+---------------------------------+
| Markdown Syntax                   | Output                          |
+===================================+=================================+
| ``` markdown                      |                                 |
| * Main items                      | * Main items                    |
|     + Sub-item 1                  |     + Sub-item 1                |
|     + Sub-item 2                  |     + Sub-item 2                |
|         - Sub-sub-item 1          |         - Sub-sub-item 1        |
| ```                               |                                 |
+-----------------------------------+---------------------------------+

:::


## Ordered list {.scrollable} 

<br>

::: nonincremental

+-----------------------------------+---------------------------------+
| Markdown Syntax                   | Output                          |
+===================================+=================================+
| ``` markdown                      |                                 |
| 1. Eggs                           |  1. Eggs                        |
| 1. Tea                            |  1. Tea                         |
| 1. Fish                           |  1. Fish                        |
| 1. Milk                           |  1. Milk                        |
| ```                               |                                 |
+-----------------------------------+---------------------------------+

:::

## List {.scrollable} 

<br>

::: nonincremental

+-----------------------------------+---------------------------------+
| Markdown Syntax                   | Output                          |
+===================================+=================================+
| ``` markdown                      |                                 |
| (@)  A list whose numbering       |  (1) A list whose numbering     |
|                                   |                                 |
| continues after                   |  continues after                |
|                                   |                                 |
| (@)  an interruption              |  (2) an interruption            |
| ```                               |                                 |
+-----------------------------------+---------------------------------+

:::

## List {.scrollable} 

<br>

::: nonincremental

+-----------------------------------+---------------------------------+
| Markdown Syntax                   | Output                          |
+===================================+=================================+
| ``` markdown                      |                                 |
| ::: {}                            | ::: {}                          |
| 1. A list                         | 1. A list                       |
| :::                               | :::                             |
|                                   |                                 |
| ::: {}                            | ::: {}                          |
| 1. Followed by another list       | 1. Followed by another list     |
| :::                               | :::                             |
| ```                               |                                 |
+-----------------------------------+---------------------------------+

:::

## Definition {.scrollable} 

```markdown
term
: definition
```

. . .

<br>

::: nonincremental

+-----------------------------------+---------------------------------+
| Markdown Syntax                   | Output                          |
+===================================+=================================+
|                                   | Power                           |
| ```markdown                       | : Power is power.               |
| Power                             |                                 |
| : Power is power.                 |                                 |
| ```                               |                                 |
+-----------------------------------+---------------------------------+

:::

## Equations

> Use `$` delimiters for inline math.

<br>

. . .

+-------------------------------------+-----------------------------------+
| Markdown Syntax                     | Output                            |
+=====================================+===================================+
| ``` markdown                        |                                   |
| It is a great equation $E = mc^{2}$ | It is a great equation $E=mc^{2}$ |
| ```                                 |                                   |
+-------------------------------------+-----------------------------------+

## Equations

> Use `$$` delimiters for display math.

<br>

. . .

+---------------------------------------+-------------------------------------+
| Markdown Syntax                       | Output                              |
+=======================================+=====================================+
| ``` markdown                          |                                     |
| It is a great equation $$E = mc^{2}$$ | It is a great equation $$E=mc^{2}$$ |
| ```                                   |                                     |
+---------------------------------------+-------------------------------------+

::: aside
[Learn more about [Latex](https://www.overleaf.com/learn/latex/Mathematical_expressions) math expressions]{.small}
:::

## In-line coding

> `` `r ` ``

<br>

. . .

:::: {.columns}

::: {.column width="50%"}
### Code

`` `r knitr::inline_expr("1+1")` ``
:::

::: {.column width="50%"}
### Output

`r 1 + 1`
:::

::::

## Videos

> You can include videos in documents using the <br>`{{{< video >}}}` short code.

<br>

. . .

:::: {.columns}

::: {.column width="70%"}
### Code

``` {.markdown shortcodes="false"}
{{< video https://www.youtube.com/embed/wo9vZccmqwc >}}
```
:::

::: {.column width="30%"}
### Output

{{< video https://www.youtube.com/embed/wo9vZccmqwc >}}
:::

::::

## Tables {.scrollable}

<br>

#### Markdown Syntax

``` markdown
| Right | Left | Default | Center |
|------:|:-----|---------|:------:|
|   12  |  12  |    12   |    12  |
|  123  |  123 |   123   |   123  |
|    1  |    1 |     1   |     1  |
```

#### Output

| Right | Left | Default | Center |
|------:|:-----|---------|:------:|
|    12 | 12   | 12      |   12   |
|   123 | 123  | 123     |  123   |
|     1 | 1    | 1       |   1    |

## {background-color=black}

![](images/rainbowr.gif){fig-align=center width=30%}

[Code Chunk]{.r-fit-text}

::: aside
Artwork by [Alision Horst](https://allisonhorst.com/)
:::

## Code chunks (or cells or blocks)

**Three ways to insert code chunks in the quarto file:**

1. Keyboard shortcuts: 
    - for {{< fa brands apple >}} `Option` + `Cmd` + `i`.
    - for {{< fa brands windows >}} `ctrl` + `alt` + `i`.

1. ![](images/rstudio-insert-chunk.png) **Insert Chunk** button in the editor toolbar. 

1. Manually type the chunk delimiters ````{r}` and ```.

::: aside

Source: [Jadey Ryan's Talk](https://jadeyryan.quarto.pub/slc-rug-quarto/#/code-chunks-or-cells-or-blocks)

:::

## Code chunks (or cells or blocks)

**Two ways to run code chunks:**

![](images/rstudio-code-chunk.png)

1. Use the Run Current Chunk or Run All Chunks Above buttons.

1. Run the current code chunk with `Cmd`/`Ctrl` + `Shift` + `Enter`.

::: aside

Source: [Jadey Ryan's Talk](https://jadeyryan.quarto.pub/slc-rug-quarto/#/code-chunks-or-cells-or-blocks)

:::

## {background-image="images/demo.gif" background-size="50%" background-position="right" background-color=black}

:::: {.columns}

::: {.column width="40%"}

[Demo <br> Code <br> Chunk]{.r-fit-text}

::: aside
[{{< fa download >}} demo_code_chunk.qmd](demo_code_chunk.qmd){.r-fit-text}

GIF Source {{< fa brands instagram >}} [@dolly_ki_tapri_nagpur](https://www.instagram.com/dolly_ki_tapri_nagpur)
:::

:::

::::

## R function

-   "A function, in a programming environment, is a set of instructions."

-   "A programmer builds a function to avoid repeating the same task, or reduce complexity."

## R function

::: panel-tabset
### Code

```{r}
#| label: fun-round1
#| eval: false

round(24.3454, 3)
```

<br>

`round(argument 1, argument 2)`

### Output

```{r}
#| label: fun-round1
#| echo: false
#| output: asis

```
:::

## Structure of R function {.center transition="fade"}

<br>

![](images/function_str1.png)

## Structure of R function {.center transition="fade"}

<br>

![](images/function_str2.png)

## Structure of R function {.center transition="fade"}

<br>

![](images/function_str3.png)

## Structure of R function {.center transition="fade"}

<br>

![](images/function_str4.png)

## Structure of R function {.center transition="fade"}

<br>

![](images/function_str5.png)

<!-- ## Structure of R function {.center background-image="images/function-args.png" background-size="80%"} -->

## Round function

::: panel-tabset
### Code

Function with default argument.

```{r}
#| label: fun-round2
#| eval: false

round(46.487)
```

### Output

```{r}
#| label: fun-round2
#| echo: false
#| output: asis

```
:::

## Round function

::: panel-tabset
### Code

Function with a specific value of an argument.

```{r}
#| label: fun-round3
#| eval: false

round(x = 46.587, digits = 2)
```

### Output

```{r}
#| label: fun-round3
#| echo: false
#| output: asis

```
:::

## Square root function

::: panel-tabset
### Code

Function with a specific value of an argument.

```{r}
#| label: fun-sqrt
#| eval: false

sqrt(x = 9)
```

### Output

```{r}
#| label: fun-sqrt
#| echo: false
#| output: asis

```
:::

## Sequence function

::: panel-tabset
### Code

Function with a specific value of an argument.

```{r}
#| label: fun-seq
#| eval: false

seq.int(from = 10, to = 30, by = 5)
```

or

```{r}
#| label: fun-seq1
#| eval: false

seq.int(from = 10,
        to = 30,
        by = 5)
```

### Output

```{r}
#| label: fun-seq
#| echo: false
#| output: asis

```
:::

## {background-color=black}

![](images/pkgs-space.png){fig-align=center}

[R Packages]{.r-fit-text}

## R packages {background-image="https://miro.medium.com/v2/resize:fit:732/1*qVn_OyvyHA6AG2gaQkTXfA.png" background-size="50%" background-position="right"}

<br>

::: columns
::: {.column width="60%"}

> "An R package is a collection of functions, data, and documentation that extends the capabilities of base R. Using packages is key to the successful use of R."

:::

::: {.column width="40%"}

:::
:::

::: aside
[[Source: R for Data Science, 2e](https://r4ds.hadley.nz/intro)]{.small}
:::

## Metacran

![](images/metacran.png)

::: aside
Source: [[Metacran](https://www.r-pkg.org/)]{.small}
:::

## R packages

1. Install the R package

1. Call the R package

1. Update the R package

1. Remove the R package

1. Write the R package

::: aside
Demo: demo_code_chunk.qmd
:::

## Install ackages {.center}

![](images/pkg-download1.png){fig-align=center}

## Name of the packages {.center}

![](images/pkg-download2.png){fig-align=center}

## Installed packages {.center}

![](images/pkg-download3.png){fig-align=center}

## Function to install packages

<br>

```{r}
#| eval: false

install.packages("tidyverse")
```

## Function to call package

<br>

```{r}
#| eval: false

library(tidyverse)
```

## Using packages

-   You need to install package only once like:

    -   üìö We buy books once and use them again and again

    -   üí° Fix the bulb once and use it again and again.

## Using packages

-   In every R document you need to **call once** the package using function `library()`, for example library(ggplot2).

-   Once in a while, you need to update the installed packages as well.

-   If you un-install R or RStudio, you will lose all installed packages.

## Tools $\rightarrow$ Package updates {.center}

![](images/update-pkg1.png){fig-align=center}

## Select packages to update {.center}

![](images/update-pkg2.png){fig-align=center}

## Click install updates {.center}

![](images/update-pkg3.png){fig-align=center}

## To remove packages {.center}

![](images/remove-pkg.png){fig-align=center}

## {background-color=black}

![](images/heartyr.gif){fig-align="center" width="25%"}

[R Objects]{.r-fit-text}

::: aside
Artwork by [Alision Horst](https://allisonhorst.com/)
:::

## R object

<br>

> Just a name that you can use to call up stored data.

<br>

::: {.callout-important}
R assignment operators: Assignment operators are used to assign values to variables.

`my_var <- 3`

`my_var # print my_var`
:::

::: aside
[Source: [Garrett Grolemund](https://rstudio-education.github.io/hopr/basics.html#objects)]{.small}
:::

## Create object

::: panel-tabset
### Code

```{r}
#| label: age
#| eval: false
age <- c(23, 25, 16, 40, 34)

age
```

### Output

```{r}
#| label: age
#| output: asis
#| echo: false 
```
:::

## Create object

::: panel-tabset
### Code

```{r}
#| label: income
#| eval: false
income <- c(23000, 25000, 16000, 4000, 34000)

income
```

### Output

```{r}
#| label: income
#| output: asis
#| echo: false 
```
:::

## Create object

::: panel-tabset
### Code

```{r}
#| label: name
#| eval: false
name <- c("Bhim", "Rama", "Sara", "Phule", "Savitri")

name
```

### Output

```{r}
#| label: name
#| output: asis
#| echo: false 
```
:::

## Create object

::: panel-tabset
### Code

```{r}
#| label: place
#| eval: false
place <- c("MH", "RJ", "DL", "HR", "HR")

place
```

### Output

```{r}
#| label: place
#| output: asis
#| echo: false 
```
:::

## Create object

::: panel-tabset
### Code

```{r}
#| label: weight
#| eval: false
weight_kg <- c(50, 52, 61, 40, 70)

weight_kg
```

### Output

```{r}
#| label: weight
#| output: asis
#| echo: false 
```
:::

## üí°Guidelines to name R objects:

-   a name cannot start with a number.

-   a name cannot use some special symbols, like `^`, `!`, `$`, `@`, `+`, `-`, `/`, or `*`,`:`.

-   avoid caps.

-   avoid space.

-   use dash (like weight-kg) or underscore (like weight_kg).

-   if chronology matters then add date (2020-09-05-file-name).

## RStudio environment window

<br>

![](images/rstd-env.png){fig-align=center}

[ü§î How to combine all these objects and form a data set?]{.r-fit-text .fragment .theme-red}

## üëá Something like this üòªüòª

<br>

```{r}
#| echo: false

example_df <- data.frame(name, income, age, place, weight_kg)

example_df
```

## How to create a data object?

::: panel-tabset
### Code

```{r}
#| label: df
#| eval: false
example_df <- data.frame(name, income, age, place, weight_kg)

example_df
```

### Output

```{r}
#| label: df
#| output: true
#| echo: false 
```
:::

## Export data as a `csv` file

::: panel-tabset
### Code

```{r}
#| label: export-csv
#| eval: false

library(readr)

# create a folder in wd & name it "data"
write_csv(example_df, "data/example_df.csv") 
```

### Output

```{r}
#| label: export-csv
#| output: asis
#| echo: false 
```

To see the created file, check the "data" folder in your working directory.
:::

## List of all objects

::: panel-tabset
### Code

```{r}
#| label: objects-list
#| eval: false

objects()
```

### Output

```{r}
#| label: objects-list
#| output: asis
#| echo: false 
```
:::

##  {background-color=black}

![](images/stormyr.gif){fig-align="center"}

[Comment]{.r-fit-text .center}

::: {aside}
[Artwork by [Alision Horst](https://allisonhorst.com/)]{.small}
:::

## Comment:

-   "Humans will be able to read the comments, but your computer will pass over them."

-   In R, `#` is used as a commenting symbol.

::: aside
[[Source: Wikipedia](https://en.wikipedia.org/wiki/Comment_computer_programming)]{.small}
:::

## {background-color=black}

![](images/breakr.gif){fig-align=center width="25%"}

[Community Help]{.r-fit-text}

::: aside
[Artwork by [Alision Horst](https://allisonhorst.com/)]{.small}
:::

## Help using console `>`

> in console type `?your query`

-   for example `?knitr`.

-   for example `?mtcars`.

-   for example `?dplyr`.

## RStudio: Package website {.center}

<br>

![](images/help-cran.png){fig-align=center}

## [Posit community](https://community.rstudio.com/latest) {.center}

![](images/help-posit.png){fig-align=center}

## [Stack Overflow](https://stackoverflow.com/) {.center}

![](images/help-stack.png){fig-align=center}

## [GitHub](https://github.com/) {.center}

![](images/help-git.png){fig-align=center}

## Social media #RStats

![](images/code_hero.jpg){fig-align="center" width=55% }

::: aside
[Artwork by [Alision Horst](https://allisonhorst.com/)]{.small}
:::

